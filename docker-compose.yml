version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - backend

  redis:
    image: redis:7
    container_name: redis_cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: ["redis-server", "--maxmemory", "256mb", "--maxmemory-policy", "allkeys-lru"]
    networks:
      - backend

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - backend

  web:
    build: .
    container_name: django_web
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - .env
    networks:
      - backend

  celery_worker:
    build: .
    container_name: celery_worker
    command: celery -A metrovps worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - web
    env_file:
      - .env
    networks:
      - backend

  celery_beat:
    build: .
    container_name: celery_beat
    command: >
      sh -c "
        celery -A metrovps beat --loglevel=info"
    volumes:
      - .:/app
      - ./wait-for-it.sh:/app/wait-for-it.sh
    depends_on:
      - db
      - redis
      - web
      - celery_worker
    env_file:
      - .env
    networks:
      - backend

volumes:
  db_data:

networks:
  backend:
    driver: bridge
